# models.py
from django.db import models
from django.conf import settings
from datetime import timedelta
from django.utils import timezone

class Notification(models.Model):
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='notifications')
    title = models.CharField(max_length=255)
    description = models.TextField()
    link = models.URLField(null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    read = models.BooleanField(default=False)
    status = models.CharField(max_length=50, default='pending')  # for status tracking
    is_processing = models.BooleanField(default=False)  #  for processing check
    expire_at = models.DateTimeField(default=timezone.now() + timedelta(hours=24))  # Expiry time 24 hours later

    def is_expired(self): 
        return timezone.now() > self.expire_at

    def __str__(self):
        return f'Notification for {self.user.username}: {self.description}'


class Message(models.Model):
    sender = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='sent_messages')
    receiver = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='received_messages')
    content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'Message from {self.sender.username} to {self.receiver.username}: {self.content}'