# consumers.py
from channels.generic.websocket import AsyncWebsocketConsumer
import json

class NotificationConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        # Get the logged-in user's username or ID
        self.user = self.scope['user']

        # Create a unique group name for each user
        self.user_group_name = f'notifications_user_{self.user.username}'

        # Add the user to their own group
        await self.channel_layer.group_add(
            self.user_group_name,
            self.channel_name
        )

        await self.accept()  # Accept the WebSocket connection
        print(f"WebSocket connection established for {self.user_group_name}")  # Debug log

    async def disconnect(self, close_code):
        # Remove the user from their specific group when they disconnect
        await self.channel_layer.group_discard(
            self.user_group_name,
            self.channel_name
        )
        print(f"WebSocket connection closed for {self.user_group_name}")  # Debug log

    async def notify_client(self, event):
        print(f"Notification event received: {event}")
        notification = event['notification']

        # Send the notification to the specific user's WebSocket
        await self.send(text_data=json.dumps({
            'notification': notification
        }))






# ==================== Message Notificaiton System=================
class MessageConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        await self.channel_layer.group_add("messages", self.channel_name)
        await self.accept()

    async def disconnect(self, close_code):
        await self.channel_layer.group_discard("messages", self.channel_name)

    async def receive(self, text_data):
        data = json.loads(text_data)
        await self.channel_layer.group_send("messages", {
            "type": "send_message",
            "message": data,
        })

    async def send_message(self, event):
        message = event['message']
        await self.send(text_data=json.dumps({
            'message': message
        }))