
from .models import Notification
from notifications.utils import send_notification
from assets.models import User
from pentests.models import Deal, Lender

class NotificationManager:
    @staticmethod
    def create_and_send_notification(user, title, description):
        # Prevent duplicate notifications
        existing_notification = Notification.objects.filter(user=user, title=title, description=description).first()
        if existing_notification:
            return existing_notification  # Avoid creating a duplicate

        # Proceed to create and send the notification
        notification = Notification.objects.create(user=user, title=title, description=description)
        send_notification(user.id, {
            'title': title,
            'description': description,
            'created_at': notification.created_at.strftime("%Y-%m-%d %H:%M:%S"),
        })
        return notification

    @staticmethod
    def notify_matching_lenders(deal):
        # Find lenders matching the deal criteria
        matching_lenders = Lender.objects.filter(
            min_amount__lte=deal.amount,
            max_amount__gte=deal.amount,
            preferred_location__iexact=deal.location
        )

        # Notify each matching lender
        for lender in matching_lenders:
            title = f"New Deal: {deal.deal_name}"
            description = (
                f"A new deal has been posted that matches your preferences:
"
                f"Amount: ${deal.amount}
"
                f"Location: {deal.location}
"
                f"Interest Rate: {deal.interest_rate}%
"
                f"Duration: {deal.duration_months} months"
            )
            NotificationManager.create_and_send_notification(lender.user, title, description)
