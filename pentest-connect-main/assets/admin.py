from django.contrib import admin
from assets.models import FundingRequest
from dashboard.models import FundingOpportunity
from django.utils import timezone
from datetime import timedelta

class FundingRequestAdmin(admin.ModelAdmin):
    list_display = ('title', 'user', 'amount_requested', 'status', 'created_at', 'updated_at')
    list_filter = ('status',)
    search_fields = ('title', 'user__username', 'description')
    actions = ['approve_requests']

    def approve_requests(self, request, queryset):
        for funding_request in queryset:
            # Approve the funding request
            funding_request.status = 'approved'
            funding_request.save()

            # Create a FundingOpportunity if it doesn't exist
            funding_opportunity, created = FundingOpportunity.objects.get_or_create(
                funding_request=funding_request,  # Associate the FundingOpportunity with the FundingRequest
                defaults={
                    'company_name': funding_request.title,
                    'amount_requested': funding_request.amount_requested,
                    'status': 'open',  # Set status to open
                    'due_date': timezone.now() + timedelta(days=30),  # Example due date
                    'short_description': funding_request.description,
                }
            )
            if created:
                self.message_user(request, f"Funding Opportunity '{funding_opportunity.company_name}' created.")

        self.message_user(request, "Selected funding requests have been approved.")
    approve_requests.short_description = "Approve selected funding requests"











class FundingOpportunityAdmin(admin.ModelAdmin):
    list_display = ('company_name', 'amount_requested', 'status', 'due_date', 'created_at')
    list_filter = ('status',)
    search_fields = ('company_name', 'short_description')

# Register the models with the admin site
admin.site.register(FundingRequest, FundingRequestAdmin)
admin.site.register(FundingOpportunity, FundingOpportunityAdmin)
