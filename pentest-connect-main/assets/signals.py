# Example in a views.py or a signals.py
from channels.layers import get_channel_layer
from asgiref.sync import async_to_sync
from .models import Notification
from django.http import Response



def send_notification(user_id, notification):
    channel_layer = get_channel_layer()
    async_to_sync(channel_layer.group_send)(
        f"user_{user_id}",
        {
            'type': 'send_notification',
            'notification': notification
        }
    )
    # Inside your NotificationViewSet create method
def create(self, request, *args, **kwargs):
    notification = Notification.objects.create(
        user=request.user,  # Ensure to set the current user
        title=request.data.get('title'),  # Use title from the request
        description=request.data.get('description')  # Use description from the request
    )

    # Send the notification to the user via WebSocket
    send_notification(request.user.id, {
        'title': notification.title,
        'description': notification.description,
        'created_at': notification.created_at.strftime("%Y-%m-%d %H:%M:%S"),
    })

    serializer = self.get_serializer(notification)
    return Response(serializer.data, status=status.HTTP_201_CREATED)

