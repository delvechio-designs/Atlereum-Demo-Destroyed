const userListCont = document.querySelector(".user-list");
const usernameConts = userListCont.querySelectorAll("ul li .title");
const messagesCont = document.querySelector(".message-cont .messages-cont");
const messageForm = document.getElementById("message-form");

var roomName, chatSocket;

// INFO: I was trying to update the url without refreshing the page
// usernameConts.forEach(usernameCont => {
//   usernameCont.addEventListener("click", (e) => {
//     const username = usernameCont.getAttribute("data-username")
//     messagesCont.innerHTML = `Selected ${username}`;
//     const url = new URL(window.location.href);
//     const search_params = url.searchParams;
//     search_params.set('selected', username);
//     url.search = search_params.toString();

//     const new_url = url.toString();

//     console.log(new_url);

//     window.location.href = new_url
//   })
// })

function getChatSocket() {
  const socket = new WebSocket(`ws://localhost:8000/ws/chat/${roomName}/`);

  // TODO: What if the socket closes without intention, maybe because of an error?
  // socket.onclose = function (e) {
  //   console.log("close")
  // }
  // socket.onerror = function (e) {
  //   console.log("error")
  // }

  return socket;
}

window.addEventListener("load", (e) => {
  const searchParams = new URLSearchParams(window.location.search);
  const username = searchParams.get("selected");

  if (username) {
    const members = [CURRENT_USER, username].sort();
    roomName = members.join("_");

    chatSocket = getChatSocket();

    chatSocket.onmessage = function (e) {
      const data = JSON.parse(e.data);
      const message = data?.message;
      const sender = data?.sender;

      appendMessage(message, sender);
    };

    loadMessages(username);
  }
});

messageForm.addEventListener("submit", (e) => {
  e.preventDefault();
  if (!messageForm.message.value) return;

  chatSocket.send(
    JSON.stringify({
      message: messageForm.message.value,
      sender: CURRENT_USER,
    })
  );
  messageForm.message.value = "";
});

async function loadMessages(username) {
  const response = await fetch(`/chat/fetch_messages/${roomName}/`);
  const data = await response.json();
  const messages = data?.messages || [];

  messages.forEach((message) => {
    appendMessage(message?.content, message?.sender, message?.offer);
  });
}

function appendMessage(message, sender, offer=null) {

  console.log(offer)

  let div;

  if (offer) {
    div = generateOfferDiv(offer, sender)
  } else {
    div = generateMessageDiv(message, sender)
  }

  messagesCont.appendChild(div);

  div.scrollIntoView();
}

function generateOfferDiv(offer, sender) {
  const sendByCurrentUser = CURRENT_USER === sender;

  const div = document.createElement("div");
  div.classList.add("message", "offer");

  if (sendByCurrentUser) {
    div.classList.add("right");
  }

  const html = `
    <h4 class="mt-2">Custom Offer</h4>

    <p class="f-4 my-3">${offer?.description}</p>

    <ul class="list-unstyled">
      <li><strong>Asset:</strong> ${offer?.pentest?.asset?.name}</li>
      <li><strong>Pentest status:</strong> ${offer?.pentest?.status}</li>
      <li><strong>Type:</strong> ${offer?.pentest?.asset?.type}</li>
      <li><strong>Price:</strong> $${offer?.price}</li>
      <li><strong>Delivery in:</strong> ${offer?.delivery_time} Days</li>
    </ul>

    <div class="d-flex justify-content-end mb-2">
      ${sendByCurrentUser ? `
        <form action="/orders/offer/withdraw/${offer?.id}/" method="POST">
          <input type="hidden" name="csrfmiddlewaretoken" value="${CSRF_TOKEN}">
          <button class="btn btn-light btn-sm" ${(!offer?.is_active || offer?.is_accepted) && "disabled"} type="submit">
            ${offer?.is_accepted ? "Accepted" : offer?.is_active ? "Withdraw offer" : "Withdrawn"}
          </button>
        </form>
      ` : `
        <form action="/orders/offer/accept/${offer?.id}/" method="POST">
          <input type="hidden" name="csrfmiddlewaretoken" value="${CSRF_TOKEN}">
          <button class="btn btn-success btn-sm" ${(!offer?.is_active || offer?.is_accepted) && "disabled"} type="submit">
            ${offer?.is_accepted ? "Accepted" : offer?.is_active ? "Accept offer" : "Not available"}
          </button>
        </form>
      `}
    </div>
  `;

  div.innerHTML = html;

  return div
}

function generateMessageDiv(message, sender) {
  const sendByCurrentUser = CURRENT_USER === sender;

  const div = document.createElement("div");
  div.classList.add("message");

  if (sendByCurrentUser) {
    div.classList.add("right");
  }

  const p = document.createElement("p");
  p.innerText = message;

  div.appendChild(p);

  return div
}
