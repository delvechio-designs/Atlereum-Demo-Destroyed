// Get the modal for starting a meeting
var startModal = document.getElementById("start-meeting-modal");

// Get the button that opens the start meeting modal
var startMeetingButton = document.getElementById("start-meeting-button");

// Get the <span> element that closes the modal
var closeStartModal = document.getElementById("close-start-modal");

// When the user clicks the button, open the modal
startMeetingButton.onclick = function() {
    startModal.style.display = "block"; // Show modal
}

// When the user clicks on <span> (x), close the modal
closeStartModal.onclick = function() {
    startModal.style.display = "none"; // Hide modal
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == startModal) {
        startModal.style.display = "none"; // Hide modal
    }
}

// Handle form submission
document.getElementById("start-meeting-form").onsubmit = function(event) {
    event.preventDefault(); // Prevent default form submission

    const title = document.getElementById("meeting-title").value;
    const date = document.getElementById("meeting-date").value;
    const time = document.getElementById("meeting-time").value;
    const description = document.getElementById("meeting-description").value;
    const inviteEmail = document.getElementById("invite-email").value; // New email field

    // Implement your logic to start the meeting (e.g., saving to the server)
    // Redirect to a meeting page or handle it according to your routing
    console.log(`Meeting Title: ${title}, Date: ${date}, Time: ${time}, Description: ${description}, Invite Email: ${inviteEmail}`);

    // Optionally, you can close the modal after starting the meeting
    startModal.style.display = "none"; // Hide modal

    // Here you can add code to send an email invitation using your backend
}
















