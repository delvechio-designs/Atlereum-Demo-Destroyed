const body = document.querySelector("body"),
      modeToggle = body.querySelector(".mode-toggle");
      sidebar = body.querySelector("nav");
      sidebarToggle = body.querySelector(".sidebar-toggle");

let getMode = localStorage.getItem("mode");
if(getMode && getMode ==="dark"){
    body.classList.toggle("dark");
}

let getStatus = localStorage.getItem("status");
if(getStatus && getStatus ==="close"){
    sidebar.classList.toggle("close");
}

modeToggle.addEventListener("click", () =>{
    body.classList.toggle("dark");
    if(body.classList.contains("dark")){
        localStorage.setItem("mode", "dark");
    }else{
        localStorage.setItem("mode", "light");
    }
});

sidebarToggle.addEventListener("click", () => {
    sidebar.classList.toggle("close");
    if(sidebar.classList.contains("close")){
        localStorage.setItem("status", "close");
    }else{
        localStorage.setItem("status", "open");
    }
})
// search bar real-time=====================
function filterMeetings() {
    // Get the value from the search input
    const input = document.getElementById('searchInput');
    const filter = input.value.toLowerCase();

    // Get the tables and their rows
    const scheduledTable = document.getElementById('scheduledMeetingsTable');
    const pastTable = document.getElementById('pastMeetingsTable');

    // Filter Scheduled Meetings Table
    filterTable(scheduledTable, filter);

    // Filter Past Meetings Table
    filterTable(pastTable, filter);
}

function filterTable(table, filter) {
    const tr = table.getElementsByTagName('tr');
    for (let i = 1; i < tr.length; i++) {
        const td = tr[i].getElementsByTagName('td')[0]; // Assuming filtering by the first column
        if (td) {
            const txtValue = td.textContent || td.innerText;
            tr[i].style.display = txtValue.toLowerCase().indexOf(filter) > -1 ? "" : "none"; // Show or hide row
        }
    }
}
// join eeetings table modes
 // Show modal
 document.getElementById('join-meeting-button').addEventListener('click', function(event) {
    event.preventDefault(); // Prevent default link behavior
    document.getElementById('emailModal').style.display = 'block';
});

// Close modal
function closeModal() {
    document.getElementById('emailModal').style.display = 'none';
}

// Handle form submission
document.getElementById('joinMeetingForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent form submission
    const email = document.getElementById('userEmail').value;
    
    // Here you can add the logic to send the email to the meeting admin
    // For example, using fetch or XMLHttpRequest to send data to your server
    
    alert('You have joined the meeting with email: ' + email);
    
    // Close modal after submission
    closeModal();
    
    // Optionally reset the form
    document.getElementById('joinMeetingForm').reset();
});

// ==================export tables oin csv file====================
function exportTableToCSV(filename) {
    const rows = document.querySelectorAll("table tr");
    const csv = [];

    rows.forEach(row => {
        const cols = row.querySelectorAll("td, th");
        const data = Array.from(cols).map(col => col.innerText).join(",");
        csv.push(data);
    });

    const csvString = csv.join("\n");
    const link = document.createElement("a");
    link.href = "data:text/csv;charset=utf-8," + encodeURI(csvString);
    link.target = "_blank";
    link.download = filename;

    // Try to download the CSV file
    try {
        link.click();
        // Show success notification
        showNotification();
    } catch (error) {
        // Show error notification
        showErrorNotification();
    }
}

function showNotification() {
    const notification = document.getElementById("notification");
    notification.style.display = "block"; // Show the success notification

    // Remove the notification after 30 seconds
    setTimeout(() => {
        notification.style.display = "none"; // Hide the success notification
    }, 30000); // 30 seconds in milliseconds
}

function showErrorNotification() {
    const errorNotification = document.getElementById("errorNotification");
    errorNotification.style.display = "block"; // Show the error notification

    // Remove the error notification after 30 seconds
    setTimeout(() => {
        errorNotification.style.display = "none"; // Hide the error notification
    }, 30000); // 30 seconds in milliseconds
}

// pagenation
$(document).ready(function() {
    const rowsPerPage = 6; // Number of rows to show per page
    const scheduledTable = $('#scheduledMeetingsTable tbody');
    const pastTable = $('#pastMeetingsTable tbody');

    // Initialize current page
    let currentPageScheduled = 1;
    let currentPagePast = 1;

    // Function to paginate a table
    function paginateTable(table, page) {
        const rows = table.find('tr');
        const totalRows = rows.length;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        // Hide all rows
        rows.hide();

        // Calculate start and end indices for the current page
        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;

        // Show rows for the current page
        rows.slice(start, end).show();

        // Show/hide pagination buttons
        $('#prevButtonScheduled').toggle(page > 1);
        $('#nextButtonScheduled').toggle(page < totalPages);
    }

    function paginatePastTable(page) {
        const rows = pastTable.find('tr');
        const totalRows = rows.length;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        // Hide all rows
        rows.hide();

        // Calculate start and end indices for the current page
        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;

        // Show rows for the current page
        rows.slice(start, end).show();

        // Show/hide pagination buttons
        $('#prevButtonPast').toggle(page > 1);
        $('#nextButtonPast').toggle(page < totalPages);
    }

    // Initialize both tables
    paginateTable(scheduledTable, currentPageScheduled);
    paginatePastTable(currentPagePast);

    // Previous button click event for Scheduled Meetings
    $('#prevButtonScheduled').click(function() {
        if (currentPageScheduled > 1) {
            currentPageScheduled--;
            paginateTable(scheduledTable, currentPageScheduled);
        }
    });

    // Next button click event for Scheduled Meetings
    $('#nextButtonScheduled').click(function() {
        const totalScheduledRows = scheduledTable.find('tr').length;
        const totalScheduledPages = Math.ceil(totalScheduledRows / rowsPerPage);

        if (currentPageScheduled < totalScheduledPages) {
            currentPageScheduled++;
            paginateTable(scheduledTable, currentPageScheduled);
        }
    });

    // Previous button click event for Past Meetings
    $('#prevButtonPast').click(function() {
        if (currentPagePast > 1) {
            currentPagePast--;
            paginatePastTable(currentPagePast);
        }
    });

    // Next button click event for Past Meetings
    $('#nextButtonPast').click(function() {
        const totalPastRows = pastTable.find('tr').length;
        const totalPastPages = Math.ceil(totalPastRows / rowsPerPage);

        if (currentPagePast < totalPastPages) {
            currentPagePast++;
            paginatePastTable(currentPagePast);
        }
    });
});


// ===================Get the modal=================================
var modal = document.getElementById('start-meeting-modal');

// Get the button that opens the modal
var btn = document.getElementById('start-meeting-button');

// Get the <span> element that closes the modal
var closeBtn = document.getElementById('close-start-modal');

// When the user clicks on the button, open the modal
btn.onclick = function() {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
closeBtn.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}
