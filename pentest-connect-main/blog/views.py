from typing import Any, Dict
from django.contrib import messages
from django.shortcuts import redirect, render, get_object_or_404
from django.urls import reverse_lazy, reverse
from django.views.generic import CreateView, ListView, UpdateView, DetailView, View

from .forms import PostForm, CommentForm
from .models import Post, Comment

# Create your views here.


class PostListView(ListView):
    model = Post
    template_name = "dashboard/blog/list.html"

    # def get_queryset(self):
    #     queryset = super().get_queryset()
    #     return queryset.filter(user=self.request.user)


class PostDetailView(DetailView):
    model = Post
    template_name = "dashboard/blog/details.html"

    def get_context_data(self, *args, **kwargs):
        context = super().get_context_data(*args, **kwargs)
        context["comment_form"] = CommentForm
        return context


class PostCreateView(CreateView):
    model = Post
    # success_url = reverse_lazy("blog:PostListView")
    template_name = "dashboard/blog/create.html"
    form_class = PostForm

    def form_valid(self, form):
        post = form.save(commit=False)
        post.user = self.request.user
        post.save()
        messages.success(self.request, "Post created successfully")
        # return redirect(self.success_url)
        return redirect(reverse("blog:PostDetailView", kwargs={"pk": post.pk}))


class PostUpdateView(UpdateView):
    model = Post
    success_url = reverse_lazy("blog:PostListView")
    template_name = "dashboard/blog/update.html"
    form_class = PostForm

    def get_success_url(self):
        messages.success(self.request, "Post updated successfully")
        print(self.kwargs.get("pk"))
        return reverse("blog:PostDetailView", kwargs={"pk": self.kwargs.get("pk")})
        # return super().get_success_url()


class CommentCreateView(View):
    def post(self, request, post_id):
        post = get_object_or_404(Post, id=post_id)
        form = CommentForm(request.POST)

        if form.is_valid():
            comment = form.save(commit=False)
            comment.user = request.user
            comment.post = post
            comment.save()
            messages.success(request, "Comment submitted successfully")

        previous_url = request.META.get("HTTP_REFERER")
        return redirect(previous_url)
